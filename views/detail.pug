doctype html
html(lang='en')
    head
        // start: Meta
        meta(charset='utf-8')
        title Bootstrap Metro Dashboard by Dennis Ji for ARM demo
        meta(name='description', content='Bootstrap Metro Dashboard')
        meta(name='author', content='Dennis Ji')
        meta(name='keyword', content='Metro, Metro UI, Dashboard, Bootstrap, Admin, Template, Theme, Responsive, Fluid, Retina')
        // end: Meta
        // start: Mobile Specific
        meta(name='viewport', content='width=device-width, initial-scale=1')
        // end: Mobile Specific
        // start: CSS
        link#bootstrap-style(href='../css/bootstrap.min.css', rel='stylesheet')
        link(href='../css/bootstrap-responsive.min.css', rel='stylesheet')
        link#base-style(href='../css/style.css', rel='stylesheet')
        link#base-style-responsive(href='../css/style-responsive.css', rel='stylesheet')
        link(href='http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800&subset=latin,cyrillic-ext,latin-ext', rel='stylesheet', type='text/css')
        // end: CSS
        // The HTML5 shim, for IE6-8 support of HTML5 elements
        //
          if lt IE 9script(src='http://html5shim.googlecode.com/svn/trunk/html5.js')
          link#ie-style(href='css/ie.css', rel='stylesheet')
        // if IE 9link#ie9style(href='css/ie9.css', rel='stylesheet')
        // start: Favicon
        link(rel='shortcut icon', href='../img/favicon.ico')
        // end: Favicon
        style(type='text/css').
            body {
                background: url(../img/bg-login.jpg) !important;
            }
    body(onload='init()')
        .container-fluid-full
            .row-fluid
                .span1
                .row-fluid.span10
                    .box-content
                        form.form-horizontal
                            fieldset
                                .box.span12
                                    .box-header
                                        h2
                                            a(href='/main')
                                                i.halflings-icon.white.th
                                            span.break
                                            | Tabs
                                    .box-content
                                        ul#myTab.nav.tab-menu.nav-tabs
                                            li.active
                                                a(href='#info') Info
                                            li
                                                a(href='#camera') Camera
                                        #myTabContent.tab-content
                                            #info.tab-pane.active
                                                table.table(align='center' style='width:80%;')
                                                    thead
                                                        tr
                                                            th 장비명
                                                            th=deviceid
                                                            th
                                                            th
                                                    tbody#infolist
                                            #camera.tab-pane
                                                div(align='center')
                                                    video(src='', controls='controls' id='view' width='640px' height='480px')
                                                hr
                                                table.table(align='center' style='width:80%;')
                                                    thead
                                                        tr
                                                            th="Device #"+deviceid
                                                    tbody#cameralist
                        hr
                    // /span
                // /row
            // /.fluid-container
        // /fluid-row
        #common-Modal1.common-modal.modal.fade(tabindex='-1', role='dialog', aria-hidden='true')
            .modal-content
                ul.list-inline.item-details
                    li
                        a(href='http://themifycloud.com') Admin templates
                    li
                        a(href='http://themescloud.org') Bootstrap themes
        // start: JavaScript
        script(src='../js/notify.js')
        script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js")
        script(type='text/javascript').
            function init() {
                var data = sessionStorage.getItem("data");
                var deviceid = !{deviceid};
                data = JSON.parse(data);

                for (var i = 0; i < data.length; ++i) {
                    if (data[i]['id'] == deviceid) {
                        var current_device = data[i]
                        var lubricant_machine = current_device['lubricant_machine'] ? true : false; //장비 윤활유 부족
                        var lubricant_saw = current_device['lubricant_saw'] ? true : false; //톱날 윤활유 부족
                        var pressure_air_main = current_device['pressure_air_main'] ? true : false; //메인 공기압 부족
                        var pressure_oil_hydraulic = current_device['pressure_oil_hydraulic'] ? true : false; //유압유 압력 부족
                        var servo_cut = current_device['servo_cut'] ? true : false; //절단 서보 에러
                        var servo_transfer = current_device['servo_transfer'] ? true : false; //이송 서보 에러
                        var spindle = current_device['spindle'] ? true : false; //스핀들 이상 에러
                        var safety_door = current_device['safety_door'] ? true : false; //안전문 이상
                        var depletion = current_device['depletion'] ? true : false; //소제 부족

                        var workload = current_device['workload'];
                        var workload_current = workload & 65535;
                        var workload_total = workload >>> 16;
                        workload = workload_current + "/" + workload_total;

                        var timestamp = current_device['timestamp'];
                        timestamp = new Date(timestamp * 1000);
                        timestamp = timestamp.toUTCString();

                        var json = {
                            "장비 윤활유 상태": lubricant_machine,
                            "톱날 윤활유 상태": lubricant_saw,
                            "메인 공기압 상태": pressure_air_main,
                            "윤활유 압력 상태": pressure_oil_hydraulic,
                            "절단 서보 모터 상태": servo_cut,
                            "이송 서보 상태": servo_transfer,
                            "스핀들 모터 상태": spindle,
                            "안전 도어 이상": safety_door,
                            "소재 여유량 상태": depletion,
                            "작업량": workload,
                            "마지막 갱신시간": timestamp
                        };

                        for (key in json) {
                            var tbody = document.getElementById('infolist');
                            var row = tbody.insertRow(tbody.rows.length); //하단 추가

                            var flag = '';
                            if (typeof json[key] === 'string' || json[key] instanceof String)
                                flag = "<span class=\"\">" + json[key] + "</span>\n"
                            else
                                flag = json[key] ? "<span class=\"label label-success\">" + json[key] + "</span>\n" : "<span class=\"label\">" + json[key] + "</span>\n";

                            row.innerHTML =
                                "<td class=\"center\">" + key + "</td>\n" +
                                "<td class=\"center\">\n" +
                                flag +
                                "</td>\n";
                        }
                        break;
                    }
                }

                GetCameraList();
            }
            playtest = setInterval(function(){
                GetRenewedData();
                var data = sessionStorage.getItem("data");
                var deviceid = !{deviceid};
                data = JSON.parse(data);

                for (var i = 0; i < data.length; ++i) {



                    if (current_device['id'] == deviceid) {
                        var current_device = data[i]
                        var lubricant_machine = current_device['lubricant_machine'] ? true : false; //장비 윤활유 부족
                        var lubricant_saw = current_device['lubricant_saw'] ? true : false; //톱날 윤활유 부족
                        var pressure_air_main = current_device['pressure_air_main'] ? true : false; //메인 공기압 부족
                        var pressure_oil_hydraulic = current_device['pressure_oil_hydraulic'] ? true : false; //유압유 압력 부족
                        var servo_cut = current_device['servo_cut'] ? true : false; //절단 서보 에러
                        var servo_transfer = current_device['servo_transfer'] ? true : false; //이송 서보 에러
                        var spindle = current_device['spindle'] ? true : false; //스핀들 이상 에러
                        var safety_door = current_device['safety_door'] ? true : false; //안전문 이상
                        var depletion = current_device['depletion'] ? true : false; //소제 부족
                        var workload = current_device['workload'];
                        var workload_current = workload & 65535;
                        var workload_total = workload >>> 16;
                        workload = workload_current + '/' + workload_total;

                        var timestamp = current_device['timestamp'];
                        timestamp = new Date(timestamp * 1000);
                        timestamp = timestamp.toUTCString();

                        var json = {
                            "장비 윤활유 상태": lubricant_machine,
                            "톱날 윤활유 상태": lubricant_saw,
                            "메인 공기압 상태": pressure_air_main,
                            "윤활유 압력 상태": pressure_oil_hydraulic,
                            "절단 서보 모터 상태": servo_cut,
                            "이송 서보 상태": servo_transfer,
                            "스핀들 모터 상태": spindle,
                            "안전 도어 이상": safety_door,
                            "소재 여유량 상태": depletion,
                            "작업량": workload,
                            "마지막 갱신시간": timestamp
                        };

                        var a =0;
                        for(key in json){
                            var tbody = document.getElementById('infolist');
                            var row = tbody.childNodes[a];

                            var flag = '';
                            if(typeof json[key] ==='string' || json[key] instanceof String)
                                flag = "<span class=\"\">" + json[key] + "</span>\n"
                            else
                                flag = json[key]? "<span class=\"label label-success\">" + json[key]+ "</span>\n": "<span class=\"label\">" + json[key] + "</span>\n";

                            row.innerHTML =
                                "<td class=\"center\">"+key+"</td>\n" +
                                "<td class=\"center\">\n" +
                                 flag+
                                "</td>\n";

                            i++;
                        }

                    }



                }
            },5000)


            function doNotification(title, message,tag) {
                var myNotification = new Notify(title, {
                    body: message,
                    tag: tag,

                    timeout: 4
                });

                myNotification.show();
            }

            function _ajax_request(url, data, callback, method, returnType, auth) {
                return jQuery.ajax({
                    url: url,
                    type: method,
                    data: data,
                    success: callback,
                    dataType: returnType,
                    headers: {
                        authorization: auth
                    }
                });
            }

            function GetRenewedData() {
                _ajax_request('/data/renewed_data', "", function (data) {
                    sessionStorage.setItem('data', data.data)

                    var newdata = JSON.parse(data.data);

                    for (var i = 0; i < newdata.length; ++i) {
                        var current_device = newdata[i]
                        var lubricant_machine = current_device['lubricant_machine'] ? true : false; //장비 윤활유 부족
                        var lubricant_saw = current_device['lubricant_saw'] ? true : false; //톱날 윤활유 부족
                        var pressure_air_main = current_device['pressure_air_main'] ? true : false; //메인 공기압 부족
                        var pressure_oil_hydraulic = current_device['pressure_oil_hydraulic'] ? true : false; //유압유 압력 부족
                        var servo_cut = current_device['servo_cut'] ? true : false; //절단 서보 에러
                        var servo_transfer = current_device['servo_transfer'] ? true : false; //이송 서보 에러
                        var spindle = current_device['spindle'] ? true : false; //스핀들 이상 에러
                        var safety_door = current_device['safety_door'] ? true : false; //안전문 이상
                        var depletion = current_device['depletion'] ? true : false; //소제 부족
                        var workload = current_device['workload'];
                        var workload_current = workload & 65535;
                        var workload_total = workload >>> 16;
                        workload = workload_current + '/' + workload_total;

                        var timestamp = current_device['timestamp'];
                        timestamp = new Date(timestamp * 1000);
                        timestamp = timestamp.toUTCString();

                        var json = {
                            "장비 윤활유 상태": lubricant_machine,
                            "톱날 윤활유 상태": lubricant_saw,
                            "메인 공기압 상태": pressure_air_main,
                            "윤활유 압력 상태": pressure_oil_hydraulic,
                            "절단 서보 모터 상태": servo_cut,
                            "이송 서보 상태": servo_transfer,
                            "스핀들 모터 상태": spindle,
                            "안전 도어 이상": safety_door,
                            "소재 여유량 상태": depletion,
                            "작업량": workload,
                            "마지막 갱신시간": timestamp
                        };
                        var compVal = 0;
                        var msg = '';
                        for (key in json)
                            compVal |= json[key]

                        if (compVal) {
                            msg = '[' + current_device['id'] + '] '

                            if (lubricant_machine)
                                msg += '장비 윤활유 부족/'
                            if (lubricant_saw)
                                msg += '톱날 윤활유 부족/'
                            if (pressure_air_main)
                                msg += '메인 공기압 부족/'
                            if (pressure_oil_hydraulic)
                                msg += '유압유 압력 부족/'
                            if (servo_cut)
                                msg += '절단 서보 에러/'
                            if (servo_transfer)
                                msg += '이송 서보 에러/'
                            if (spindle)
                                msg += '스핀들 이상 에러/'
                            if (safety_door)
                                msg += '안전문 이상/'
                            if (depletion)
                                msg += '소재 부족/'
                        }
                        if (!Notify.needsPermission)
                            doNotification("", msg, i);
                    }

                }, "GET", "json", sessionStorage['token'])
            }

            function GetCameraList(){
                _ajax_request('/video/list',{id:!{deviceid}},function(data){
                    var cameralist = JSON.parse(data.data)
                    cameralist = cameralist.reverse()
                    cameralist.forEach(function(item, index, array){
                        var tbody = document.getElementById('cameralist');
                        var row = tbody.insertRow(tbody.rows.length); //하단 추가

                        row.innerHTML = "<td class=\"center\"><a href='#view' onclick='GetStreaming(\""+item+"\")'>" + item + "</td>\n";

                    })

                },"POST","json",sessionStorage['token'])

            }
            function GetStreaming(url){
                _ajax_request('/video/streaming/'+!{deviceid}+'/'+url,'',function(){
                    var view = document.getElementById('view');
                    view.src = '/video/streaming/'+!{deviceid}+'/'+url;

                },"GET")
            }


        script(src='../js/jquery-1.9.1.min.js')
        script(src='../js/jquery-migrate-1.0.0.min.js')
        script(src='../js/jquery-ui-1.10.0.custom.min.js')
        script(src='../js/jquery.ui.touch-punch.js')
        script(src='../js/modernizr.js')
        script(src='../js/bootstrap.min.js')
        script(src='../js/jquery.cookie.js')
        script(src='../js/fullcalendar.min.js')
        script(src='../js/jquery.dataTables.min.js')
        script(src='../js/excanvas.js')
        script(src='../js/jquery.flot.js')
        script(src='../js/jquery.flot.pie.js')
        script(src='../js/jquery.flot.stack.js')
        script(src='../js/jquery.flot.resize.min.js')
        script(src='../js/jquery.chosen.min.js')
        script(src='../js/jquery.uniform.min.js')
        script(src='../js/jquery.cleditor.min.js')
        script(src='../js/jquery.noty.js')
        script(src='../js/jquery.elfinder.min.js')
        script(src='../js/jquery.raty.min.js')
        script(src='../js/jquery.iphone.toggle.js')
        script(src='../js/jquery.uploadify-3.1.min.js')
        script(src='../js/jquery.gritter.min.js')
        script(src='../js/jquery.imagesloaded.js')
        script(src='../js/jquery.masonry.min.js')
        script(src='../js/jquery.knob.modified.js')
        script(src='../js/jquery.sparkline.min.js')
        script(src='../js/counter.js')
        script(src='../js/retina.js')
        script(src='../js/custom.js')
        // end: JavaScript
